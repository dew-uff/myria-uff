{
    "fragments": [
        {
            "operators": [
                {
                    "argOperatorId": 1,
                    "opId": 0,
                    "opName": "MyriaSplitConsumer",
                    "opType": "LocalMultiwayConsumer"
                },
                {
                    "argChild": 0,
                    "emitExpressions": [
                        {
                            "outputName": "L_RETURNFLAG",
                            "rootExpressionOperator": {
                                "columnIdx": 0,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "L_LINESTATUS",
                            "rootExpressionOperator": {
                                "columnIdx": 1,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "sum_qty",
                            "rootExpressionOperator": {
                                "columnIdx": 2,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "sum_base_price",
                            "rootExpressionOperator": {
                                "columnIdx": 3,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "sum_disc_price",
                            "rootExpressionOperator": {
                                "columnIdx": 4,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "sum_charge",
                            "rootExpressionOperator": {
                                "columnIdx": 5,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "avg_qty",
                            "rootExpressionOperator": {
                                "left": {
                                    "left": {
                                        "columnIdx": 2,
                                        "type": "VARIABLE"
                                    },
                                    "right": {
                                        "outputType": "DOUBLE_TYPE",
                                        "type": "TYPE"
                                    },
                                    "type": "CAST"
                                },
                                "right": {
                                    "columnIdx": 6,
                                    "type": "VARIABLE"
                                },
                                "type": "DIVIDE"
                            }
                        },
                        {
                            "outputName": "avg_price",
                            "rootExpressionOperator": {
                                "left": {
                                    "left": {
                                        "columnIdx": 3,
                                        "type": "VARIABLE"
                                    },
                                    "right": {
                                        "outputType": "DOUBLE_TYPE",
                                        "type": "TYPE"
                                    },
                                    "type": "CAST"
                                },
                                "right": {
                                    "columnIdx": 6,
                                    "type": "VARIABLE"
                                },
                                "type": "DIVIDE"
                            }
                        },
                        {
                            "outputName": "avg_qty",
                            "rootExpressionOperator": {
                                "left": {
                                    "left": {
                                        "columnIdx": 7,
                                        "type": "VARIABLE"
                                    },
                                    "right": {
                                        "outputType": "DOUBLE_TYPE",
                                        "type": "TYPE"
                                    },
                                    "type": "CAST"
                                },
                                "right": {
                                    "columnIdx": 6,
                                    "type": "VARIABLE"
                                },
                                "type": "DIVIDE"
                            }
                        },
                        {
                            "outputName": "count_order",
                            "rootExpressionOperator": {
                                "columnIdx": 6,
                                "type": "VARIABLE"
                            }
                        }
                    ],
                    "opId": 2,
                    "opName": "MyriaApply(L_RETURNFLAG=$0,L_LINESTATUS=$1,sum_qty=$2,sum_base_price=$3,sum_disc_price=$4,sum_charge=$5,avg_qty=(CAST(DOUBLE_TYPE, $2) / $6),avg_price=(CAST(DOUBLE_TYPE, $3) / $6),avg_qty=(CAST(DOUBLE_TYPE, $7) / $6),count_order=$6)",
                    "opType": "Apply"
                },
                {
                    "argChild": 2,
                    "argOverwriteTable": true,
                    "distributeFunction": {
                        "indexes": [
                            0,
                            1
                        ],
                        "type": "Hash"
                    },
                    "opId": 3,
                    "opName": "MyriaStore(public:adhoc:q1)",
                    "opType": "DbInsert",
                    "relationKey": {
                        "programName": "adhoc",
                        "relationName": "q1",
                        "userName": "public"
                    }
                }
            ]
        },
        {
            "operators": [
                {
                    "argOperatorId": 5,
                    "opId": 4,
                    "opName": "MyriaShuffleConsumer",
                    "opType": "ShuffleConsumer"
                },
                {
                    "aggregators": [
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 2,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 3,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 4,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 5,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 6,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 7,
                            "type": "Primitive"
                        }
                    ],
                    "argChild": 4,
                    "argGroupFields": [
                        0,
                        1
                    ],
                    "opId": 6,
                    "opName": "MyriaGroupBy($0,$1; SUM($2),SUM($3),SUM($4),SUM($5),SUM($6),SUM($7))",
                    "opType": "Aggregate"
                },
                {
                    "argChild": 6,
                    "opId": 1,
                    "opName": "MyriaSplitProducer",
                    "opType": "LocalMultiwayProducer"
                }
            ]
        },
        {
            "operators": [
                {
                    "debroadcast": false,
                    "opId": 7,
                    "opName": "MyriaScan(public:adhoc:LINEITEM)",
                    "opType": "TableScan",
                    "relationKey": {
                        "programName": "adhoc",
                        "relationName": "LINEITEM",
                        "userName": "public"
                    }
                },
                {
                    "argChild": 7,
                    "argPredicate": {
                        "rootExpressionOperator": {
                            "left": {
                                "columnIdx": 10,
                                "type": "VARIABLE"
                            },
                            "right": {
                                "type": "CONSTANT",
                                "value": "1998-09-01",
                                "valueType": "STRING_TYPE"
                            },
                            "type": "LTEQ"
                        }
                    },
                    "opId": 8,
                    "opName": "MyriaSelect(($10 <= \"1998-09-01\"))",
                    "opType": "Filter"
                },
                {
                    "argChild": 8,
                    "emitExpressions": [
                        {
                            "outputName": "L_QUANTITY",
                            "rootExpressionOperator": {
                                "columnIdx": 4,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "L_EXTENDEDPRICE",
                            "rootExpressionOperator": {
                                "columnIdx": 5,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "L_DISCOUNT",
                            "rootExpressionOperator": {
                                "columnIdx": 6,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "L_RETURNFLAG",
                            "rootExpressionOperator": {
                                "columnIdx": 8,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "L_LINESTATUS",
                            "rootExpressionOperator": {
                                "columnIdx": 9,
                                "type": "VARIABLE"
                            }
                        },
                        {
                            "outputName": "_COLUMN5_",
                            "rootExpressionOperator": {
                                "left": {
                                    "columnIdx": 5,
                                    "type": "VARIABLE"
                                },
                                "right": {
                                    "left": {
                                        "type": "CONSTANT",
                                        "value": "1",
                                        "valueType": "LONG_TYPE"
                                    },
                                    "right": {
                                        "columnIdx": 6,
                                        "type": "VARIABLE"
                                    },
                                    "type": "MINUS"
                                },
                                "type": "TIMES"
                            }
                        },
                        {
                            "outputName": "_COLUMN6_",
                            "rootExpressionOperator": {
                                "left": {
                                    "left": {
                                        "columnIdx": 5,
                                        "type": "VARIABLE"
                                    },
                                    "right": {
                                        "left": {
                                            "type": "CONSTANT",
                                            "value": "1",
                                            "valueType": "LONG_TYPE"
                                        },
                                        "right": {
                                            "columnIdx": 6,
                                            "type": "VARIABLE"
                                        },
                                        "type": "MINUS"
                                    },
                                    "type": "TIMES"
                                },
                                "right": {
                                    "left": {
                                        "type": "CONSTANT",
                                        "value": "1",
                                        "valueType": "LONG_TYPE"
                                    },
                                    "right": {
                                        "columnIdx": 7,
                                        "type": "VARIABLE"
                                    },
                                    "type": "PLUS"
                                },
                                "type": "TIMES"
                            }
                        }
                    ],
                    "opId": 9,
                    "opName": "MyriaApply(L_QUANTITY=$4,L_EXTENDEDPRICE=$5,L_DISCOUNT=$6,L_RETURNFLAG=$8,L_LINESTATUS=$9,_COLUMN5_=($5 * (1 - $6)),_COLUMN6_=(($5 * (1 - $6)) * (1 + $7)))",
                    "opType": "Apply"
                },
                {
                    "aggregators": [
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 0,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 1,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 5,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 6,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "COUNT"
                            ],
                            "column": 0,
                            "type": "Primitive"
                        },
                        {
                            "aggOps": [
                                "SUM"
                            ],
                            "column": 2,
                            "type": "Primitive"
                        }
                    ],
                    "argChild": 9,
                    "argGroupFields": [
                        3,
                        4
                    ],
                    "opId": 10,
                    "opName": "MyriaGroupBy($3,$4; SUM($0),SUM($1),SUM($5),SUM($6),COUNTALL,SUM($2))",
                    "opType": "Aggregate"
                },
                {
                    "argChild": 10,
                    "distributeFunction": {
                        "indexes": [
                            0,
                            1
                        ],
                        "type": "Hash"
                    },
                    "opId": 5,
                    "opName": "MyriaShuffleProducer(h($0,$1))",
                    "opType": "ShuffleProducer"
                }
            ]
        }
    ],
    "logicalRa": "Store(public:adhoc:q1)[Apply(L_RETURNFLAG=$0,L_LINESTATUS=$1,sum_qty=$2,sum_base_price=$3,sum_disc_price=$4,sum_charge=$5,avg_qty=(CAST(DOUBLE_TYPE, $2) / $6),avg_price=(CAST(DOUBLE_TYPE, $3) / $7),avg_qty=(CAST(DOUBLE_TYPE, $8) / $9),count_order=$6)[GroupBy($3,$4; SUM($0),SUM($1),SUM($5),SUM($6),COUNT($0),COUNT($1),SUM($2),COUNT($2))[Apply(L_QUANTITY=$4,L_EXTENDEDPRICE=$5,L_DISCOUNT=$6,L_RETURNFLAG=$8,L_LINESTATUS=$9,_COLUMN5_=($5 * (1 - $6)),_COLUMN6_=(($5 * (1 - $6)) * (1 + $7)))[Select(($10 <= \"1998-09-01\"))[Scan(public:adhoc:LINEITEM)]]]]]",
    "rawQuery": "lineitem = scan('LINEITEM');\n\nq1 = select L_RETURNFLAG,\n       L_LINESTATUS,\n       sum(L_QUANTITY) as sum_qty,\n       sum(L_EXTENDEDPRICE) as sum_base_price,\n       sum(L_EXTENDEDPRICE*(1-L_DISCOUNT)) as sum_disc_price,\n       sum(L_EXTENDEDPRICE*(1-L_DISCOUNT)*(1+L_TAX)) as sum_charge,\n       FLOAT(sum(L_QUANTITY))/count(L_QUANTITY) as avg_qty, -- avg\n       FLOAT(sum(L_EXTENDEDPRICE))/count(L_EXTENDEDPRICE) as avg_price, -- avg\n       FLOAT(sum(L_DISCOUNT))/count(L_DISCOUNT) as avg_qty, -- avg\n       count(L_QUANTITY) as count_order  -- really COUNT(*)\nfrom\n       lineitem\nwhere\n  L_SHIPDATE <= \"1998-09-01\";       -- TODO fill in delta automatically; validation is 90 days delta\n--auto group by l_returnflag, l_linestatus \n\n-- TODO\n-- order by l_returnflag, l_linestatus\n\nstore(q1, q1);"
}
